This directory contains a benchmark program written in C and an
input generator.  To use the benchmarks, to the following:

--------------------------------------------------------------------
PART I
--------------------------------------------------------------------
 1) Copy the following file to your local directory
       cbench_shar
       match_c.shell
 2) Execute both files using the /bin/sh shell:
       $ cbench_shar
       $ match_c.shell

 3) Run the benchmark tests (using /bin/sh): 
       $ chmod +x run.me
       $ run.me 

    The running times for program wmatch on test inputs t1.wm and t2.wm
    will now be in file time.log.  Times are reported in seconds. 
    You are interested in the user time.  When run on a Sun 
    SPARCstation 1, the time.log file looks like this:

wmatch test 1
        6.2 real         5.4 user         0.3 sys  
 
wmatch test 2
       50.4 real        46.8 user         0.7 sys  

--------------------------------------------------------------------
PART II
-------------------------------------------------------------------
    See how much variation you can induce in the reported user time by 
    changing such things as compiler options,  number of processes on the
    system, etc.  (But don't change the code or input files.)  For 
    example, try the following: 

       $ cc -c -O3 wmatch.c -lm           #recompile with O3 level 
       $ make wmatch                      #link in the other files 
       $ run.me "Opt. Level 3"            #time it  with notes in quotes

    The running times will be appended to time.log with the notes
    you provide in quotes.

------------------------------------------------------------------------
Here are some explanatory notes:

1)  Files t1.in and t2.in contain input commands for random.c, which 
    generates file t1.edge and t2.edge in DIMACS .edge format.  They 
    are converted to t1.wm and t2.wm, which have a format compatible 
    with wmatch.  This can take a little while.  

2)  The shell program edge_to_wm does the format conversion, using
    awk files double.a and strip.a 

3)  The program wmatch was contributed by Ed Rothberg.  
    Read the comments in wmatch.c for further information. 

4)  The shell program run.me checks whether it has any command line
    arguments.  If none, then it does everything---generate inputs,
    convert input formats, time the programs and log the time.  

    If you provide a "note in quotes" as a run.me argument, then the 
    program just does the timing part, without re-generating inputs or
    re-compiling wmatch.  The note is inserted in time.log

    The run.me program only works in the /bin/sh shell. 
     