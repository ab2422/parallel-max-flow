This directory contains a fortran benchmark program. 
To run the benchmarks in this directory, do the following.

---------------------------------------------------------------
PART I
---------------------------------------------------------------
1) Copy the following files to your local system 
      fbench_shar
      t1.min
      t2.min
3) Execute fbench_shar using the /bin/sh shell to unbundle the files 
4) Execute run.me

   The file  time.log  will contain the timing results for netflo.f  
   using the two input files.  You are interested in the user times. 
   Times are reported in seconds.
   When run on a Sun SPARCstation 1, the time.log file looks like this: 

netflo test 1
STOP: 12345
        4.5 real         3.8 user         0.2 sys  
 
netflo test 2
STOP: 12345
        7.4 real         6.8 user         0.3 sys  

-------------------------------------------------------------------- 
PART II
--------------------------------------------------------------------
See how much variation you can induce in the reported user time by
varying such things as compiler options, number of processes on the
system, etc. (But don't change the code or the input files).  For 
example try the following:

   $ f77 netflo.f -O3 -o netflo       # fortran compiler, opt level 3
   $ run.me "opt. level 3"            # try again (with notes in quotes) 

--------------------------------------------------------------------
Here are some explanatory notes: 

1)  The files t1.min and t2.min are in DIMACS .min format.  Each contains 
    fewer than 50K bytes (the BITNET file size limit).

         t1.min  Is problem 26 from the well-known NETGEN benchmarks. 
                 The solution value is 67799030

         t2.min  Is another netgen problem, not from the standard set.
                 The solution value is 90486481

    If these test problems are too small to produce interesting runtimes
    on your machine, send a note to netflow@dimacs.rutgers.edu. 

2)  The program netflo.f was written by R. V. Helgason and J. L. Kennington
    (Operations Research Dept., Southern Methodist University).  
    A minor change was made for compatibility with Sun Fortran. 
    Read the program comments for further information. 

3)  The shell program min_to_flo converts from (relatively compact) .min
    format to one compatible with netflo.f. The netflo program requires
    that its input be in the file NETFLO.INP. Output will appear in 
    NETFLO.OUT.  

4)  To find the solution value in NETFLO.OUT, type
       $grep COST NETFLO.OUT

5)  The shell program logtime puts the time and remarks (in quotes)
    in the file time.log for safekeeping.  

